import { AsPrototypeCO } from "./AsPrototypeCO";
import { AsFactoryResultCO } from "./AsFactoryResultCO";
import { AsFactoryCO } from "./AsFactoryCO";
import { Container } from "../Container";
export declare class InstantiationModeCO {
    private readonly container;
    private readonly key;
    private instantiable;
    private chainingOptions;
    constructor(container: Container, key: string);
    asPrototype(): AsPrototypeCO;
    asSingleton(): AsPrototypeCO;
    asConstant(): void;
    addTags(tags: string[]): void;
    asFactoryResult(factoryKey: string): AsFactoryResultCO;
    asFactory(factoryFn?: string): AsFactoryCO;
    withContext(context: {}): void;
}
