{"version":3,"file":"InstantiationModeCO.js","sourceRoot":"","sources":["../../lib/chainingOptions/InstantiationModeCO.ts"],"names":[],"mappings":";;;AAAA,uDAAoD;AACpD,mDAAgD;AAChD,2DAAwD;AACxD,+CAA4C;AAI5C,MAAa,mBAAmB;IAK5B,YAA6B,SAAoB,EAAmB,GAAW;QAAlD,cAAS,GAAT,SAAS,CAAW;QAAmB,QAAG,GAAH,GAAG,CAAQ;QAC3E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC5E,IAAI,CAAC,eAAe,GAAG,IAAI,iCAAe,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC/D,CAAC;IAED,WAAW;QACP,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACnC,OAAO,IAAI,6BAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACvD,CAAC;IAED,WAAW;QACP,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACnC,OAAO,IAAI,6BAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACvD,CAAC;IAED,UAAU;QACN,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;IACtC,CAAC;IAED,OAAO,CAAC,IAAc;QAClB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,eAAe,CAAC,UAAkB;QAC9B,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACjD,OAAO,IAAI,qCAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3D,CAAC;IAED,SAAS,CAAC,SAAkB;QACxB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC1C,OAAO,IAAI,yBAAW,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACrD,CAAC;IAED,WAAW,CAAC,OAAW;QACnB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;CACJ;AAzCD,kDAyCC","sourcesContent":["import { ChainingOptions } from \"./ChainingOptions\";\nimport { AsPrototypeCO } from \"./AsPrototypeCO\";\nimport { AsFactoryResultCO } from \"./AsFactoryResultCO\";\nimport { AsFactoryCO } from \"./AsFactoryCO\";\nimport { Container } from \"../Container\";\nimport { IInstantiatable } from \"../interfaces/IInstantiatable\";\n\nexport class InstantiationModeCO {\n\n    private instantiable: IInstantiatable;\n    private chainingOptions: ChainingOptions;\n\n    constructor(private readonly container: Container, private readonly key: string) {\n        this.instantiable = this.container.definitionsRepository.getDefinition(key);\n        this.chainingOptions = new ChainingOptions(container, key);\n    }\n\n    asPrototype(): AsPrototypeCO {\n        this.chainingOptions.asPrototype();\n        return new AsPrototypeCO(this.container, this.key);\n    }\n\n    asSingleton(): AsPrototypeCO {\n        this.chainingOptions.asSingleton();\n        return new AsPrototypeCO(this.container, this.key);\n    }\n\n    asConstant(): void {\n        this.chainingOptions.asConstant();\n    }\n\n    addTags(tags: string[]) {\n        this.chainingOptions.addTags(tags);\n    }\n\n    asFactoryResult(factoryKey: string): AsFactoryResultCO {\n        this.chainingOptions.asFactoryResult(factoryKey);\n        return new AsFactoryResultCO(this.container, this.key);\n    }\n\n    asFactory(factoryFn?: string): AsFactoryCO {\n        this.chainingOptions.asFactory(factoryFn);\n        return new AsFactoryCO(this.container, this.key);\n    }\n\n    withContext(context: {}): void {\n        this.chainingOptions.withContext(context);\n    }\n}\n"]}