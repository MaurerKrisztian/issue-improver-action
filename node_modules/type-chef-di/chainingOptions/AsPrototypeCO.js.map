{"version":3,"file":"AsPrototypeCO.js","sourceRoot":"","sources":["../../lib/chainingOptions/AsPrototypeCO.ts"],"names":[],"mappings":";;;AAAA,uDAAoD;AACpD,+CAA4C;AAK5C,MAAa,aAAa;IAKtB,YAA6B,SAAoB,EAAmB,GAAW;QAAlD,cAAS,GAAT,SAAS,CAAW;QAAmB,QAAG,GAAH,GAAG,CAAQ;QAC3E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC9E,IAAI,CAAC,eAAe,GAAG,IAAI,iCAAe,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC/D,CAAC;IAED,WAAW,CAAC,OAAW;QACnB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,CAAC,SAAkB;QACxB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC1C,OAAO,IAAI,yBAAW,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACrD,CAAC;CAGJ;AApBD,sCAoBC","sourcesContent":["import { ChainingOptions } from \"./ChainingOptions\";\nimport { AsFactoryCO } from \"./AsFactoryCO\";\nimport { Container } from \"../Container\";\nimport { IInstantiatable } from \"../interfaces/IInstantiatable\";\n\n\nexport class AsPrototypeCO {\n\n    private instantiatable: IInstantiatable;\n    private chainingOptions: ChainingOptions;\n\n    constructor(private readonly container: Container, private readonly key: string) {\n        this.instantiatable = this.container.definitionsRepository.getDefinition(key);\n        this.chainingOptions = new ChainingOptions(container, key);\n    }\n\n    withContext(context: {}) {\n        this.chainingOptions.withContext(context);\n    }\n\n    asFactory(factoryFn?: string): AsFactoryCO {\n        this.chainingOptions.asFactory(factoryFn);\n        return new AsFactoryCO(this.container, this.key);\n    }\n\n\n}\n"]}