{"version":3,"file":"AsFactoryCO.js","sourceRoot":"","sources":["../../lib/chainingOptions/AsFactoryCO.ts"],"names":[],"mappings":";;;AAAA,uDAAoD;AAIpD,MAAa,WAAW;IAIpB,YAA6B,SAAoB,EAAmB,GAAW;QAAlD,cAAS,GAAT,SAAS,CAAW;QAAmB,QAAG,GAAH,GAAG,CAAQ;QAC3E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC9E,IAAI,CAAC,eAAe,GAAG,IAAI,iCAAe,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC/D,CAAC;IAED,WAAW,CAAC,OAAW;QACnB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;CAEJ;AAbD,kCAaC","sourcesContent":["import { ChainingOptions } from \"./ChainingOptions\";\nimport { Container } from \"../Container\";\nimport { IInstantiatable } from \"../interfaces/IInstantiatable\";\n\nexport class AsFactoryCO {\n    private instantiatable: IInstantiatable;\n    private chainingOptions: ChainingOptions;\n\n    constructor(private readonly container: Container, private readonly key: string) {\n        this.instantiatable = this.container.definitionsRepository.getDefinition(key);\n        this.chainingOptions = new ChainingOptions(container, key);\n    }\n\n    withContext(context: {}) {\n        this.chainingOptions.withContext(context);\n    }\n\n}\n"]}