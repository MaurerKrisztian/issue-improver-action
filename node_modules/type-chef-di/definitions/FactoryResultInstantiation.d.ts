import { IFactoryResultDefinition } from "./definitionInterfaces/IFactoryResultDefinition";
import { IInstantiatable } from "../interfaces/IInstantiatable";
import { Container } from "../Container";
import { ArgResolver } from "./helpers/ArgResolver";
export declare class FactoryResultInstantiation implements IInstantiatable {
    private readonly container;
    tags: string[];
    definition: IFactoryResultDefinition;
    argResolver: ArgResolver;
    constructor(definition: IFactoryResultDefinition, container: Container);
    instantiate(): Promise<unknown>;
    getFactoryResult<T>(factoryResultDefinition: IFactoryResultDefinition): Promise<T>;
}
