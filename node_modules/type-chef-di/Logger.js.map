{"version":3,"file":"Logger.js","sourceRoot":"","sources":["../lib/Logger.ts"],"names":[],"mappings":";;;AAEA,MAAa,MAAM;IACf,YAA6B,GAAW,EAAmB,QAAsB;QAApD,QAAG,GAAH,GAAG,CAAQ;QAAmB,aAAQ,GAAR,QAAQ,CAAc;IACjF,CAAC;IAEO,MAAM,CAAC,OAAe,EAAE,GAAY;QACxC,OAAO,kBAAkB,GAAG,IAAI,IAAI,CAAC,GAAG,KAAK,OAAO,EAAE,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,GAAW,EAAE,GAAY;QAC3B,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SACtC;IACL,CAAC;CACJ;AAbD,wBAaC","sourcesContent":["import { logLevelType } from \"./Container\";\n\nexport class Logger {\n    constructor(private readonly ctx: string, private readonly logLevel: logLevelType) {\n    }\n\n    private logStr(message: string, ctx?: string) {\n        return `[type-chef-di][${ctx || this.ctx}] ${message}`;\n    }\n\n    debug(msg: string, ctx?: string) {\n        if (this.logLevel === \"debug\") {\n            console.log(this.logStr(msg, ctx));\n        }\n    }\n}\n"]}