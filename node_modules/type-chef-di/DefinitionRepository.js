"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefinitionRepository = void 0;
const Keys_1 = require("./Keys");
class DefinitionRepository {
    constructor(options) {
        this.options = options;
        this.definitions = new Map();
    }
    getDefinitions() {
        return this.definitions;
    }
    getDefinition(key) {
        if (!this.definitions.has(key)) {
            throw new Error(`${key} instance is undefined`);
        }
        return this.definitions.get(key);
    }
    getDefinitionByType(constructor) {
        for (const [key, value] of this.definitions.entries()) {
            if (value.definition.content === constructor) {
                return value;
            }
        }
        if (this.options.enableAutoCreate) {
            return Keys_1.Keys.AUTO_CREATE_DEPENDENCY;
        }
        throw new Error(`Definition not found by type: ${constructor}`);
    }
    getDefinitionKeysBySpecificTags(tags) {
        const resultKeys = [];
        this.definitions.forEach((value, key) => {
            const foundTag = tags.find(tag => value.tags.includes(tag));
            if (foundTag) {
                resultKeys.push(key);
            }
        });
        return resultKeys;
    }
    addTags(key, tags) {
        const definition = this.getDefinition(key);
        definition.tags.push(...tags);
        return definition.tags;
    }
}
exports.DefinitionRepository = DefinitionRepository;
//# sourceMappingURL=DefinitionRepository.js.map