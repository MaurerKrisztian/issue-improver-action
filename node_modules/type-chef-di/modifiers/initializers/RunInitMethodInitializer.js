"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RunInitMethodInitializer = void 0;
const Keys_1 = require("../../Keys");
const ArgResolver_1 = require("../../definitions/helpers/ArgResolver");
class RunInitMethodInitializer {
    constructor(resolver) {
        this.resolver = resolver;
        this.argResolver = new ArgResolver_1.ArgResolver(this.resolver);
    }
    run(resolvedInstance, definition) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.runInitMethod(resolvedInstance, definition);
        });
    }
    runInitMethod(resolvedInstance, definition) {
        return __awaiter(this, void 0, void 0, function* () {
            const initMethodMeta = Reflect.getMetadata(Keys_1.Keys.INIT_METHOD_PROPERTY_DECORATOR_KEY, definition.content) || {};
            const initMethod = initMethodMeta[Keys_1.Keys.INIT_METHOD_PROPERTY_DECORATOR_KEY];
            if (initMethod === undefined) {
                return resolvedInstance;
            }
            const initMethodParamsMeta = Reflect.getMetadata(initMethod, definition.content) || {};
            const initFnArgs = yield this.argResolver.resolveArguments(initMethodParamsMeta, definition.context, initMethod);
            resolvedInstance[initMethod](...initFnArgs);
            return resolvedInstance;
        });
    }
}
exports.RunInitMethodInitializer = RunInitMethodInitializer;
//# sourceMappingURL=RunInitMethodInitializer.js.map