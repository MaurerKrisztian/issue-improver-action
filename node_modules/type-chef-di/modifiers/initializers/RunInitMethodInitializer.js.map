{"version":3,"file":"RunInitMethodInitializer.js","sourceRoot":"","sources":["../../../lib/modifiers/initializers/RunInitMethodInitializer.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAAkC;AAElC,uEAAoE;AAGpE,MAAa,wBAAwB;IAGjC,YAAqB,QAAmB;QAAnB,aAAQ,GAAR,QAAQ,CAAW;QAFxC,gBAAW,GAAgB,IAAI,yBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAG1D,CAAC;IAEK,GAAG,CAAC,gBAAqB,EAAE,UAAe;;YAC5C,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;QAC5D,CAAC;KAAA;IAEK,aAAa,CAAC,gBAAqB,EAAE,UAAe;;YACtD,MAAM,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC,WAAI,CAAC,kCAAkC,EAAE,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAC9G,MAAM,UAAU,GAAW,cAAc,CAAC,WAAI,CAAC,kCAAkC,CAAC,CAAC;YACnF,IAAI,UAAU,KAAK,SAAS,EAAE;gBAC1B,OAAO,gBAAgB,CAAC;aAC3B;YACD,MAAM,oBAAoB,GAAG,OAAO,CAAC,WAAW,CAAC,UAAU,EAAE,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACvF,MAAM,UAAU,GAAQ,MAAM,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACtH,gBAAgB,CAAC,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;YAE5C,OAAO,gBAAgB,CAAC;QAC5B,CAAC;KAAA;CAGJ;AAxBD,4DAwBC","sourcesContent":["import { Keys } from \"../../Keys\";\nimport { IResolver } from \"../../interfaces/IResolver\";\nimport { ArgResolver } from \"../../definitions/helpers/ArgResolver\";\nimport { IInitializer } from \"./IInitializer\";\n\nexport class RunInitMethodInitializer implements IInitializer {\n    argResolver: ArgResolver = new ArgResolver(this.resolver);\n\n    constructor(readonly resolver: IResolver) {\n    }\n\n    async run(resolvedInstance: any, definition: any): Promise<any> {\n        return this.runInitMethod(resolvedInstance, definition);\n    }\n\n    async runInitMethod(resolvedInstance: any, definition: any): Promise<any> {\n        const initMethodMeta = Reflect.getMetadata(Keys.INIT_METHOD_PROPERTY_DECORATOR_KEY, definition.content) || {};\n        const initMethod: string = initMethodMeta[Keys.INIT_METHOD_PROPERTY_DECORATOR_KEY];\n        if (initMethod === undefined) {\n            return resolvedInstance;\n        }\n        const initMethodParamsMeta = Reflect.getMetadata(initMethod, definition.content) || {};\n        const initFnArgs: any = await this.argResolver.resolveArguments(initMethodParamsMeta, definition.context, initMethod);\n        resolvedInstance[initMethod](...initFnArgs);\n\n        return resolvedInstance;\n    }\n\n\n}\n"]}